### YamlMime:Module

# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

# NOTE: This is a build and deploy pipeline, that leverages build stages to preform 
# all neceassary steps within to build, provision (ARM), and deploy to Azure.

# Pipeline will run a single time for each merged PR on master. pr: none prevents 2nd build individually on the PR
# See the following for behavior:
# https://stackoverflow.com/questions/62735654/github-pull-requests-triggering-all-pipelines-in-azure-devops
# https://stackoverflow.com/questions/63843925/azure-pipelines-triggers-2-jobs-per-pull-request
# https://learn.microsoft.com/en-us/azure/devops/pipelines/repos/azure-repos-git?view=azure-devops&tabs=yaml#disabling-the-ci-trigger
# https://learn.microsoft.com/en-us/azure/devops/release-notes/2019/sprint-146-update#avoid-triggering-multiple-ci-builds-for-pull-requests
trigger:
- master
pr:
- none

# Note: Use readonly variables that can't be overwritten by injection and safe to use in PowerShell scripts below 
# An alternative is variables will be injected as environmental variables if also needed within PowerShell scripts
# See: https://learn.microsoft.com/en-us/azure/devops/pipelines/process/variables?view=azure-devops&tabs=yaml%2Cbatch#environment-variables
variables:
  - name: AppServiceName 
    value: 'PWAWeatherApp' 
    readonly: true
  
  - name: AppServiceResourceGroup 
    value: 'pwa-weather-app-rg'
    readonly: true

  - name: DefaultAnalyticsResourceGroup 
    value: 'default-eus-rg'
    readonly: true

  - name: AzureLocation
    value: 'eastus'
    readonly: true


stages:
  - stage: Build
    displayName: "Build PWAWeatherApp and Publish Artifact"
    jobs:
      - job: BuildAngularWebApp
        pool:
          vmImage: ubuntu-latest

        steps:
        - task: NodeTool@0
          displayName: 'Use Node 18.x'
          inputs:
            versionSpec: 18.x

        - script: |
            npm install -g @angular/cli
            npm install
            ng build --configuration production
          displayName: 'npm install and Angular build'

        - task: CopyFiles@2
          displayName: 'Copy ARM Template Files'
          inputs:
            SourceFolder: 'azure/ARMTemplates/'
            Contents: 'azure-appservice*.json'
            TargetFolder: '$(Build.ArtifactStagingDirectory)'

        - task: ArchiveFiles@2
          displayName: 'Archive Angular Build'
          inputs:
            rootFolderOrFile: 'www'
            includeRootFolder: false
            archiveType: 'zip'
            archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
            replaceExistingArchive: true

        - task: PublishBuildArtifacts@1
          displayName: 'Publish Build Artifacts to drop folder'
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'drop'
            publishLocation: 'Container'

  - stage: DeployDev
    displayName: "Deploy Angular App to Dev Environment"
    jobs:
      - deployment: 
        pool:
          vmImage: ubuntu-latest
        environment: 'Dev'
        strategy:
            runOnce:
              deploy:
                steps:
                - task: AzureCLI@2
                  displayName: 'Azure CLI: Provision Resource Groups'
                  inputs:
                    azureSubscription: 'Azure Xpirit MPN Subscription Service Principal'
                    scriptType: 'pscore'
                    scriptLocation: 'inlineScript'
                    inlineScript: |
                      az group create --name $(AppServiceResourceGroup) --location $(AzureLocation)
                      az group create --name $(DefaultAnalyticsResourceGroup) --location $(AzureLocation)
                - task: AzureResourceManagerTemplateDeployment@3
                  displayName: 'Azure ARM Template Deploy: Provision App Service'
                  inputs:
                    azureResourceManagerConnection: 'Azure Xpirit MPN Subscription Service Principal'
                    subscriptionId: 'e31d48fb-bcb0-4148-b3f9-78ff51f5e760'
                    resourceGroupName: '$(AppServiceResourceGroup)'
                    location: 'East US'
                    csmFile: '$(Pipeline.Workspace)/drop/azure-appservice.json'
                    csmParametersFile: '$(Pipeline.Workspace)/drop/azure-appservice.parameters.json'
                - task: AzureRmWebAppDeployment@4
                  displayName: 'Azure App Service Deploy: PWAWeatherApp'
                  inputs:
                    azureSubscription: 'Azure Xpirit MPN Subscription Service Principal'
                    WebAppName: '$(AppServiceName)'
                    deployToSlotOrASE: true
                    ResourceGroupName: '$(AppServiceResourceGroup)'
                    packageForLinux: $(Pipeline.Workspace)/**/*.zip
                  